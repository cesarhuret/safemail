import { Contract, providers, utils } from "ethers";
import { createProxyWithNonce } from "../abi/createProxyWithNonce";
import config from "../config.json";

export const getSafeAddress = async (email: string) => {
  let safeAddress;

  const chain = JSON.parse(localStorage.getItem("chain") || "{}");

  console.log(chain);

  if (chain.litName !== "celo") {
    const factoryContract = new Contract(
      config.factory,
      [createProxyWithNonce],
      new providers.JsonRpcProvider("https://bsc.blockpi.network/v1/rpc/public")
    );

    safeAddress = await factoryContract.callStatic.createProxyWithNonce(
      "0x3E5c63644E683549055b9Be8653de26E0B4CD36E",
      utils.arrayify(
        `0xb63e800d0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000f48f2b2d2a534e402487b3ee7c18c33aec0fe5e40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000${config.signTxn.address.slice(
          2
        )}0000000000000000000000000000000000000000000000000000000000000000`
      ),
      utils.id(email)
    );
  } else {
    const factoryContract = new Contract(
      "0xc22834581ebc8527d974f8a1c97e1bea4ef910bc",
      [createProxyWithNonce],
      new providers.JsonRpcProvider("http://3.65.14.197:8545/")
    );

    console.log("celo");

    safeAddress = await factoryContract.callStatic.createProxyWithNonce(
      "0xfb1bffC9d739B8D520DaF37dF666da4C687191EA",
      utils.arrayify(
        `0xb63e800d0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000f48f2b2d2a534e402487b3ee7c18c33aec0fe5e40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000${config.signTxn.address.slice(
          2
        )}0000000000000000000000000000000000000000000000000000000000000000`
      ),
      utils.id(email)
    );
  }
  return safeAddress;
};
